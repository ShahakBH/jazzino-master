#!/bin/bash

BASE_DIR=$(cd -P -- "$(dirname -- "$0")" >/dev/null && pwd -P)
LIB_DIR=$BASE_DIR/../lib

RUBY_RELEASE=2.1.2
RUBY=ruby
GEM=gem
BUNDLE=bundle

if [[ "$(type rvm 2>&1)" =~ 'shell' ]]; then
    echo "* RVM already loaded"
else
    echo "* RVM not loaded, checking $HOME/.rvm"
    if [ -x "$HOME/.rvm/bin/rvm" ]; then
        PATH=$PATH:$HOME/.rvm/bin
        if [ -f $HOME/.rvm/scripts/rvm ]; then
            source $HOME/.rvm/scripts/rvm
        fi
    else
        echo "Cannot find RVM, system Ruby will be used: $(which ruby) $(ruby -v)"
    fi
fi

if [ -n "$(which rvm 2>/dev/null)" ]; then
    RUBY_VERSION="$(rvm list strings | grep $RUBY_RELEASE | head -1)"
    if [ -z "$RUBY_VERSION" ]; then
        echo "No Ruby $RUBY_RELEASE is installed; please install one (try: rvm install $RUBY_RELEASE). Exiting..."
        exit 1
    fi

    RUBY="rvm $RUBY_VERSION do ruby"
    GEM="rvm $RUBY_VERSION do gem"
    BUNDLE="rvm $RUBY_VERSION do bundle"
fi

if [ -z "$($GEM list | egrep '^bundler\s+')" ]; then
    echo "* Installing dependencies (this should only run once)"
    OUTPUT=$($GEM install bundler 2>&1)
    if [ $? -ne 0 ]; then
        echo "! Failed to install dependencies: $OUTPUT"
        exit 1
    fi
fi

pushd $BASE_DIR >/dev/null

echo "* Updating dependencies"

if [ "$(uname)" != 'Darwin' ]; then
    BUNDLER_OPTS=--system
fi

OUTPUT=$($BUNDLE install $BUNDLER_OPTS 2>&1)
if [ $? -ne 0 ]; then
    echo "! Failed to update dependencies: $OUTPUT"
    exit 1
fi

git rev-parse --git-dir 1>/dev/null 2>/dev/null
if [ $? -eq 0 ]; then # we are in Git
    git fetch origin
    if [ $? -ne 0 ]; then
        echo -e $'\e[31m''WARNING: Unable to check if Git working copy is current'$'\e[00m'
    else
        CURRENT_BRANCH=$(git branch | grep '*' | awk '{ print $2 }')
        if [ "$CURRENT_BRANCH" != "master" ]; then
            echo "Current branch is not master, up-to-date check skipped."
        elif [ "$(git log HEAD..origin/master --oneline | wc -l | tr -d ' ')" != "0" ]; then
            echo -e $'\e[31m''WARNING: Current working copy may be out of date!'$'\e[00m'
            if [ -t 1 ]; then
                read -p "Press [Enter] to confirm you wish to deploy with a stale working copy..."
            fi
        fi
    fi
fi

$RUBY -I$LIB_DIR $LIB_DIR/deploy.rb $*
RUBY_EXIT_CODE=$?

popd >/dev/null

exit $RUBY_EXIT_CODE
