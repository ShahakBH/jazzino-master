# This file has been generated by chef
# Any manual changes will be overwritten.
#
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
        log 127.0.0.1   local0
        log 127.0.0.1   local1 notice
        #log loghost    local0 info
        maxconn 200000
        #debug
        #quiet
        user haproxy
        group haproxy
        stats socket /var/run/haproxy.sock mode 0600 level admin
        # note: multi-core operation will disable some features, and will cause high softirq waits
        #       don't uncomment unless you're seeing constant 100% core usage by haproxy
        # nbproc 8

defaults
        log         global
        mode        http
        #option forwardfor header X-Client
        #option      httplog
        option      dontlognull
        retries     3
        option      redispatch
        maxconn     150000
#        contimeout  5000
#        clitimeout  50000
#        srvtimeout  50000
        timeout check 5s
        timeout connect 10s
        timeout client 30s
        timeout server 30s
        timeout http-keep-alive 60s
        timeout http-request 20s  # slowloris protection
        default-server inter 3s fall 2 rise 2 slowstart 60s

### maintenance service on <%= @http_source_port %>

frontend lobbies-port-<%= @http_source_port %>-frontend
       bind :<%= @http_source_port %>
       bind ::1:<%= @http_source_port %>
       mode http
       option httpclose
       acl maintenance_whitelist hdr_ip(X-Forwarded-For) <%= @whitelist.join(' ') %>
       use_backend lobbies-backend-passthrough if maintenance_whitelist
       default_backend lobbies-backend

### maintenance service on <%= @https_source_port %>

frontend lobbies-port-<%= @https_source_port %>-frontend
       bind 127.0.0.1:<%= @https_source_port %>
       bind ::1:<%= @https_source_port %>
       mode http
       reqadd X-Forwarded-Proto:\ https
       option httpclose
       acl maintenance_whitelist hdr_ip(X-Forwarded-For) <%= @whitelist.join(' ') %>
       use_backend lobbies-backend-passthrough if maintenance_whitelist
       default_backend lobbies-backend

### shared backends

backend lobbies-backend
       balance source
       http-check expect rstring okay
       option httpchk GET /command/loadBalancerStatus
       stats enable
       server maintenance1 127.0.0.1:<%= @http_redirect_port %> check port <%= @http_redirect_port %>

backend lobbies-backend-passthrough
       balance source
       http-check expect rstring okay
       option httpchk GET /command/loadBalancerStatus
       stats enable
       server maintenance1 127.0.0.1:<%= @http_whitelist_port %> check port <%= @http_whitelist_port %>

