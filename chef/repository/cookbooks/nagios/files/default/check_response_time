#!/bin/sh

STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4

exitcode=$STATE_UNKNOWN

USAGE="`basename $0` [-w|--warning]<warning threshold> [-c|--critical]<critical threshold> [-u|--url]<url>"
THRESHOLD_USAGE="WARNING threshold must be lower than CRITICAL: `basename $0` $*"

# print usage
if [[ $# -lt 3 ]]
then
        echo ""
        echo "Wrong Syntax: `basename $0` $*"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit $STATE_UNKNOWN
fi

# Default timeout
timeout=15
# read input
while [[ $# -gt 0 ]]
  do
        case "$1" in
               -w|--warning)
               shift
               warning=$1
        ;;
               -c|--critical)
               shift
               critical=$1
        ;;
               -u|--url)
               shift
               url=$1
        ;;
               -t|--timeout)
               shift
               timeout=$1
        ;;
         esac
        shift
  done

# verify input
if [ $(echo "scale=4;${warning}>=${critical}" | bc) -eq 1 ]
then
        echo ""
        echo "$THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit $STATE_UNKNOWN
fi

result_dump=$(mktemp /tmp/check_response_time.XXXXXX)

result=$(curl -o $result_dump -m $timeout -s -w %{time_connect}:%{time_starttransfer}:%{time_total}:%{http_code} $url)
time_connect=$(echo $result | awk -F: '{ print $1 }')
time_starttransfer=$(echo $result | awk -F: '{ print $2 }')
time_total=$(echo $result | awk -F: '{ print $3 }')
http_result=$(echo $result | awk -F: '{ print $4 }')

# Spring remoting returns 500 / EOFException for a remoting endpoint
if [[ "$http_result" =~ 5[0-9][0-9] && "$(grep -c java.io.EOFException $result_dump)" == 0 ]]; then
	server_failure=true
fi

if [ -f "$result_dump" ]; then
	rm -f "$result_dump"
fi

# Check the results
if [ "$http_result" == "000" ]; then
	status="UNKNOWN"
	msg="Cannot determine"
	exitcode=$STATE_UKNOWN
elif [ $(echo "scale=4;${time_total}>${critical}" | bc) -eq 1 -o "$http_result" == "404" -o -n "$server_failure" ]; then
    status="CRITICAL"
    msg=" => $critical"
    exitcode=$STATE_CRITICAL
elif [ $(echo "scale=4;${time_total}>${warning}" | bc) -eq 1 ]; then
	status="WARNING"
	msg=" => $warning"
	exitcode=$STATE_WARNING
else 
    status="OK"
    msg=""
    exitcode=0
fi

# Print the results and exit
echo "${status} - ${time_total}${msg} total time, response code ${http_result} | total_time=${time_total};$warning;$critical;0; time_connect=${time_connect} time_starttransfer=${time_starttransfer}"

exit $exitcode
