<?xml version="1.0"?>

<lightstreamer_version_conf>

<!--
    The following elements, subelements and attributes are consulted
    by Lightstreamer Server to setup its own configuration. Elements with
    an empty or blank value are ignored and considered as not defined at all.
    Elements described as "cumulative" can be inserted multiple times in the
    same place.

    A very simple variable-expansion feature is available. Element or attribute
    values of the form $propname are expanded by looking for a corresponding
    JVM property (which, for instance, can be defined by adding
    -Dpropname=propvalue to the Server command line arguments in the launch
    script). If the property is not defined, then the element or attribute
    is considered as not defined at all. The variable-expansion feature is not
    available for setting the value of non-leaf elements.

    All the element or attribute values described as directory or file paths
    can be expressed as absolute or relative pathnames; when relative,
    they are considered as relative to the directory that contains this
    configuration file.
    Note that, on Windows, if a drive name is not specified, a double initial
    slash or backslash is needed to make a path absolute.
-->

<!--
  =====================
  LICENSE CONFIGURATION
  =====================
-->

     <!-- Configure the type of license that should be used to run Lightstreamer. -->
     <license>

        <!-- License type to be used.
             Can be one of the following:
             - DEMO: The server is fully featured, has no time bomb, and puts a
               limit of max 20 concurrent users sessions. Does not require either
               a license file or access to the license server. Can be used only for
               evaluation, testing, and development; not for production.
             - LICENSE_FILE: A license file is required, which determines the
               features to be enabled and any constraint.
             - LICENSE_SERVER: Access to the online license server is required,
               which determines the features to be enabled and any constraint. -->
        <type><%= @license__type %></type>

        <!-- Used if license type is set to DEMO -->
        <demo>

           <!-- Make Lightstreamer Server run as any of the available editions.
                Can be one of the following:
                - Allegro
                - Presto
                - Vivace -->
           <edition><%= @license__demo__edition %></edition>

        </demo>

        <!-- Used if license type is set to LICENSE_FILE -->
        <license_file>

           <!-- Customer's client-id. -->
           <client_id><%= @license_file__client_id %></client_id>

           <!-- Cumulative. Path and name of the license file
                for Lightstreamer Server, relative to the conf directory.
                If multiple occurrences of <license_path> are supplied, the files
                are all evaluated and the first acceptable one is considered. This
                is useful in case the visible MAC addresses may change among
                a fixed set during the life of the Server.
                Example: mylicensefile.lic -->
           <license_path><%= @license_file__license_path %></license_path>

        </license_file>

        <!-- Used if license type is set to LICENSE_SERVER -->
        <license_server>

           <!-- Customer's client-id. -->
           <client_id></client_id>

           <!-- Customer's password. -->
           <password></password>

           <!-- Make Lightstreamer Server run as any of the available editions,
                only if the license server does not impose the edition.
                Can be one of the following:
                - Allegro
                - Presto
                - Vivace -->
           <edition>Vivace</edition>

        </license_server>

        <!-- Path of the directory in which to store the audit log file,
             relative to the conf directory. The audit log reports statistics
             on the number of concurrent sessions and is produced for some
             types of licenses only. -->
        <audit_log_path>../audit</audit_log_path>

     </license>

<!--
  ===================
  PROXY CONFIGURATION
  ===================
-->

     <!-- Configure a proxy server to access any of the external services
          (see below) and the license server (if needed, see above).
          Several means are provided for the proxy configuration,
          including PAC files, auto-discovery, and direct HTTP and SOCKS
          configuration. -->
     <proxy>

        <!-- Cumulative. HTTP Proxy Server configuration.
             If multiple occurrences of <http_proxy> are supplied, the proxies
             are all checked and the first acceptable one is used.
             If any <socks_proxy> element is configured too, it is checked
             in parallel with the <http_proxy> elements. -->
        <http_proxy>

           <!-- Hostname or IP address of the proxy server.
                Example: proxy.mycompany.com
                Example: 192.168.0.5 -->
           <proxy_host></proxy_host>

           <!-- Port number of the proxy server.
                Example: 8080 -->
           <proxy_port></proxy_port>

           <!-- User name if proxy authentication is required. -->
           <proxy_user></proxy_user>

           <!-- User password if proxy authentication is required. -->
           <proxy_password></proxy_password>

        </http_proxy>

        <!-- Cumulative. SOCKS Proxy Server configuration.
             If multiple occurrences of <socks_proxy> are supplied, the servers
             are all checked and the first acceptable one is used.
             If any <http_proxy> element is configured too, it is checked
             in parallel with the <socks_proxy> elements. -->
        <socks_proxy>

           <!-- Host name or IP address of the SOCKS server.
                Example: socks.mycompany.com
                Example: 192.168.0.9 -->
           <proxy_host></proxy_host>

           <!-- Port number of the SOCKS server.
                Example: 1080 -->
           <proxy_port></proxy_port>

           <!-- Protocol version to use.
                Can be one of the following:
                - SOCKS4
                - SOCKS4a
                - SOCKS5 -->
           <proxy_version></proxy_version>

           <!-- User name if proxy authentication is required. -->
           <proxy_user></proxy_user>

           <!-- User password if proxy authentication is required. -->
           <proxy_password></proxy_password>

        </socks_proxy>

        <!-- Configure one or multiple proxy auto-config (PAC) files, for simpler
             proxy configuration. -->
        <pac_files>

           <!-- Cumulative. URL of the PAC file.
                Example: http://intra.mycompany.com/company.pac -->
           <file_url></file_url>

           <!-- Cumulative. Path of the PAC file, in case it is stored on the file system.
                Example: C:\mypath\myfile.pac -->
           <file_path></file_path>

        </pac_files>

        <!-- In case no proxy configuration is provided or the provided
             configuration does not work, automatic proxy discovery is
             attempted (via system environment check and WPAD).
             Can be one of the following:
             - Y: perform auto-discovery;
             - N: do not perform auto-discovery. -->
        <proxy_autodiscovery>Y</proxy_autodiscovery>

        <!-- Specifies a NIC to use to access the external services, with or
             without a proxy.
             Example: 200.0.0.1 -->
        <network_interface></network_interface>

     </proxy>

<!--
  =================
  EXTERNAL SERVICES
  =================
-->

     <!-- Periodically check whether any Lightstreamer software update is
          available. In such case, a notification is written to the log file.
          Can be one of the following:
          - Y: perform automatic update check;
          - N: do not perform automatic update check. -->
     <automatic_update_check>Y</automatic_update_check>
     
     <!-- Periodically upload new entries in the audit log file to the license
          server. Audit logs are required only for some types of contract. In
          these cases, the automatic upload makes it easier for the systems
          admins to deliver the logs to us, as contractually agreed.
          Can be one of the following:
          - Y: perform automatic audit log upload; this is the default when
               audit logs are required by license terms;
          - N: do not perform automatic audit log upload; if audit logs are
               required by license terms, they must be delivered manually. -->
     <automatic_audit_upload>Y</automatic_audit_upload>

</lightstreamer_version_conf>
