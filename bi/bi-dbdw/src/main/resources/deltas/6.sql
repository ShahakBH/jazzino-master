 -- moving views required for mailstats.sh to strataproddw

-- create or replace view INSIDERS_TODAY as select p.PLAYER_ID AS PLAYER_ID,concat(concat(p.PARTNER_ID,' '),p.EXTERNAL_ID) AS EXTERNAL_ID,p.NAME AS NAME,count(a.GAME_ID) AS games,act.BALANCE AS BALANCE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) join strataprod.ACCOUNT act) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > cast(now() as date)) and (p.ACCOUNT_ID = act.ACCOUNT_ID) and (p.IS_INSIDER = 1)) group by p.NAME order by 4 desc#
-- create or replace view INSIDERS_YESTERDAY as select p.PLAYER_ID AS PLAYER_ID,concat(concat(p.PARTNER_ID,' '),p.EXTERNAL_ID) AS EXTERNAL_ID,p.NAME AS NAME,count(a.GAME_ID) AS games,act.BALANCE AS BALANCE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) join strataprod.ACCOUNT act) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > (cast(now() as date) - interval 1 day)) and (a.AUDIT_TS < cast(now() as date)) and (p.ACCOUNT_ID = act.ACCOUNT_ID) and (p.IS_INSIDER = 1)) group by p.NAME order by 4 desc#
-- create or replace view PLAYERS_SINCE_M2 as select strataprod.PLAYER.PLAYER_ID AS PLAYER_ID,strataprod.PLAYER.NAME AS NAME,strataprod.PLAYER.EXTERNAL_ID AS EXTERNAL_ID,strataprod.ACCOUNT.BALANCE AS BALANCE from (strataprod.PLAYER join strataprod.ACCOUNT) where ((strataprod.ACCOUNT.ACCOUNT_ID = strataprod.PLAYER.ACCOUNT_ID) and (strataprod.PLAYER.PARTNER_ID = 'FACEBOOK') and (strataprod.PLAYER.PLAYER_ID >= 1235))#
create or replace view GAME_STATS_TODAY as select count(distinct concat(strataproddw.AUDIT_CLOSED_GAME_PLAYER.TABLE_ID,strataproddw.AUDIT_CLOSED_GAME_PLAYER.GAME_ID)) AS games,count(distinct strataprod.PLAYER.PLAYER_ID) AS players,strataprod.TABLE_INFO.GAME_TYPE AS GAME_TYPE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER join strataprod.TABLE_INFO) join strataprod.PLAYER) where ((strataproddw.AUDIT_CLOSED_GAME_PLAYER.TABLE_ID = strataprod.TABLE_INFO.TABLE_ID) and (strataprod.PLAYER.PLAYER_ID = strataproddw.AUDIT_CLOSED_GAME_PLAYER.PLAYER_ID) and isnull(strataprod.PLAYER.IS_INSIDER) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS > cast(now() as date))) group by strataprod.TABLE_INFO.GAME_TYPE#
create or replace view GAME_STATS_YESTERDAY as select count(distinct concat(strataproddw.AUDIT_CLOSED_GAME_PLAYER.TABLE_ID,strataproddw.AUDIT_CLOSED_GAME_PLAYER.GAME_ID)) AS games,count(distinct strataprod.PLAYER.PLAYER_ID) AS players,strataprod.TABLE_INFO.GAME_TYPE AS GAME_TYPE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER join strataprod.TABLE_INFO) join strataprod.PLAYER) where ((strataproddw.AUDIT_CLOSED_GAME_PLAYER.TABLE_ID = strataprod.TABLE_INFO.TABLE_ID) and (strataprod.PLAYER.PLAYER_ID = strataproddw.AUDIT_CLOSED_GAME_PLAYER.PLAYER_ID) and isnull(strataprod.PLAYER.IS_INSIDER) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS > cast((now() - interval 1 day) as date)) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS < cast(now() as date))) group by strataprod.TABLE_INFO.GAME_TYPE#
create or replace view UNIQUE_PLAYERS_TOURNAMENT_YESTERDAY as select TT.GAME_TYPE AS GAME_TYPE,count(distinct TP.PLAYER_ID) AS UNIQUE_PLAYERS,count(distinct T.TOURNAMENT_ID) AS TOURNAMENTS from ((((strataprod.PLAYER P join strataprod.TOURNAMENT_PLAYER TP) join strataprod.TOURNAMENT T) join strataprod.TOURNAMENT_VARIATION_TEMPLATE TT) join strataprod.TOURNAMENT_SUMMARY TS) where (isnull(P.IS_INSIDER) and (TP.PLAYER_ID = P.PLAYER_ID) and (TP.TOURNAMENT_ID = T.TOURNAMENT_ID) and (T.TOURNAMENT_VARIATION_TEMPLATE_ID = TT.TOURNAMENT_VARIATION_TEMPLATE_ID) and (TS.TOURNAMENT_ID = T.TOURNAMENT_ID) and (TS.TOURNAMENT_FINISHED_TS > cast((now() - interval 1 day) as date)) and (TS.TOURNAMENT_FINISHED_TS < cast(now() as date))) group by TT.GAME_TYPE#
-- create or replace view UNIQUE_PLAYERS_YESTERDAY as select distinct strataprod.PLAYER.PLAYER_ID AS PLAYER_ID,strataprod.PLAYER.PARTNER_ID AS PARTNER_ID from (strataproddw.AUDIT_CLOSED_GAME_PLAYER join strataprod.PLAYER) where ((strataprod.PLAYER.PLAYER_ID = strataproddw.AUDIT_CLOSED_GAME_PLAYER.PLAYER_ID) and isnull(strataprod.PLAYER.IS_INSIDER) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS > cast((now() - interval 1 day) as date)) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS < cast(now() as date)))#
-- create or replace view PLAYERS_TODAY as select p.PLAYER_ID AS PLAYER_ID,concat(concat(p.PARTNER_ID,' '),p.EXTERNAL_ID) AS EXTERNAL_ID,p.NAME AS NAME,count(a.GAME_ID) AS games,act.BALANCE AS BALANCE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) join strataprod.ACCOUNT act) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > cast(now() as date)) and (p.ACCOUNT_ID = act.ACCOUNT_ID) and isnull(p.IS_INSIDER)) group by p.NAME order by 4 desc#
-- create or replace view PLAYERS_YESTERDAY as select p.PLAYER_ID AS PLAYER_ID,concat(concat(p.PARTNER_ID,' '),p.EXTERNAL_ID) AS EXTERNAL_ID,p.NAME AS NAME,count(a.GAME_ID) AS games,act.BALANCE AS BALANCE from ((strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) join strataprod.ACCOUNT act) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > (cast(now() as date) - interval 1 day)) and (a.AUDIT_TS < cast(now() as date)) and (p.ACCOUNT_ID = act.ACCOUNT_ID) and isnull(p.IS_INSIDER)) group by p.NAME order by 4 desc#
create or replace view PLAYER_GAMES_10_MINS as select p.NAME AS NAME,count(a.GAME_ID) AS 'COUNT(GAME_ID)' from (strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > (now() - interval 10 minute)) and isnull(p.IS_INSIDER)) group by p.NAME#
create or replace view PLAYER_GAMES_1_DAY as select p.NAME AS NAME,count(a.GAME_ID) AS 'COUNT(GAME_ID)' from (strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > (now() - interval 1 day)) and isnull(p.IS_INSIDER)) group by p.NAME#
create or replace view PLAYER_GAMES_1_HOUR as select p.NAME AS NAME,count(a.GAME_ID) AS 'COUNT(GAME_ID)' from (strataproddw.AUDIT_CLOSED_GAME_PLAYER a join strataprod.PLAYER p) where ((p.PLAYER_ID = a.PLAYER_ID) and (a.AUDIT_TS > (now() - interval 1 hour)) and isnull(p.IS_INSIDER)) group by p.NAME#
-- create or replace view PLAYER_GAMES_BY_DATE as select count(0) AS games,count(distinct strataprod.PLAYER.PLAYER_ID) AS players,cast(strataproddw.AUDIT_CLOSED_GAME_PLAYER.AUDIT_TS as date) AS date from (strataproddw.AUDIT_CLOSED_GAME_PLAYER join strataprod.PLAYER) where ((strataprod.PLAYER.PLAYER_ID = strataproddw.AUDIT_CLOSED_GAME_PLAYER.PLAYER_ID) and (strataprod.PLAYER.PARTNER_ID = 'FACEBOOK') and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.AUDIT_TS > (now() - interval 1 month))) group by 3#
create or replace view PLAYER_SESSIONS_1_DAY as select distinct strataprod.PLAYER.NAME AS NAME from (strataprod.PLAYER join strataproddw.ACCOUNT_SESSION) where ((strataprod.PLAYER.ACCOUNT_ID = strataproddw.ACCOUNT_SESSION.ACCOUNT_ID) and (strataproddw.ACCOUNT_SESSION.TSSTARTED > (now() - interval 1 day)) and isnull(strataprod.PLAYER.IS_INSIDER))#
create or replace view PLAYER_SESSIONS_1_HOUR as select distinct strataprod.PLAYER.NAME AS NAME from (strataprod.PLAYER join strataproddw.ACCOUNT_SESSION) where ((strataprod.PLAYER.ACCOUNT_ID = strataproddw.ACCOUNT_SESSION.ACCOUNT_ID) and (strataproddw.ACCOUNT_SESSION.TSSTARTED > (now() - interval 1 hour)) and isnull(strataprod.PLAYER.IS_INSIDER))#
-- create or replace view TOURNAMENTS_YESTERDAY as select s.TOURNAMENT_NAME AS TOURNAMENT_NAME,s.TOURNAMENT_ID AS TOURNAMENT_ID,cast(t.TOURNAMENT_START_TS as time) AS started,cast(s.TOURNAMENT_FINISHED_TS as time) AS finished,count(p.PLAYER_ID) AS PLAYERS from ((strataprod.TOURNAMENT t join strataprod.TOURNAMENT_SUMMARY s) join strataprod.TOURNAMENT_PLAYER p) where ((s.TOURNAMENT_ID = t.TOURNAMENT_ID) and (s.TOURNAMENT_ID = p.TOURNAMENT_ID) and (s.TOURNAMENT_FINISHED_TS > cast((now() - interval 1 day) as date)) and (s.TOURNAMENT_FINISHED_TS < cast(now() as date))) group by s.TOURNAMENT_NAME,t.TOURNAMENT_START_TS,s.TOURNAMENT_FINISHED_TS,s.TOURNAMENT_WINNERS order by 3#
create or replace view UNIQUE_PLAYERS_TOURNAMENT_YESTERDAY as select TT.GAME_TYPE AS GAME_TYPE,count(distinct TP.PLAYER_ID) AS UNIQUE_PLAYERS,count(distinct T.TOURNAMENT_ID) AS TOURNAMENTS from ((((strataprod.PLAYER P join strataprod.TOURNAMENT_PLAYER TP) join strataprod.TOURNAMENT T) join strataprod.TOURNAMENT_VARIATION_TEMPLATE TT) join strataprod.TOURNAMENT_SUMMARY TS) where (isnull(P.IS_INSIDER) and (TP.PLAYER_ID = P.PLAYER_ID) and (TP.TOURNAMENT_ID = T.TOURNAMENT_ID) and (T.TOURNAMENT_VARIATION_TEMPLATE_ID = TT.TOURNAMENT_VARIATION_TEMPLATE_ID) and (TS.TOURNAMENT_ID = T.TOURNAMENT_ID) and (TS.TOURNAMENT_FINISHED_TS > cast((now() - interval 1 day) as date)) and (TS.TOURNAMENT_FINISHED_TS < cast(now() as date))) group by TT.GAME_TYPE#
-- create or replace view UNIQUE_PLAYERS_YESTERDAY as select distinct strataprod.PLAYER.PLAYER_ID AS PLAYER_ID,strataprod.PLAYER.PARTNER_ID AS PARTNER_ID from (strataproddw.AUDIT_CLOSED_GAME_PLAYER join strataprod.PLAYER) where ((strataprod.PLAYER.PLAYER_ID = strataproddw.AUDIT_CLOSED_GAME_PLAYER.PLAYER_ID) and isnull(strataprod.PLAYER.IS_INSIDER) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS > cast((now() - interval 1 day) as date)) and (strataproddw.AUDIT_CLOSED_GAME_PLAYER.DBWRITE_TS < cast(now() as date)))#
-- create or replace view WEEK_COMPARISON as select x.games AS games,x.players AS players,(round(((x.games * 100) / y.games),2) - 100) AS pctweek_games,(round(((x.players * 100) / y.players),2) - 100) AS pctweek_players,x.date AS date from (strataproddw.PLAYER_GAMES_BY_DATE x join strataproddw.PLAYER_GAMES_BY_DATE y) where (y.date = (x.date - interval 7 day))#