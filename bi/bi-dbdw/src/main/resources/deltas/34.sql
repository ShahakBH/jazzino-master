DROP VIEW IF EXISTS mm_external_transactions#
-- CREATE VIEW mm_external_transactions AS
-- select
-- 	ET.AUTO_ID AS AUTO_ID,lu.PROVIDER_NAME AS PARTNER_ID,lu.EXTERNAL_ID AS EXTERNAL_ID,P.USER_ID AS USER_ID,ET.GAME_TYPE AS GAME_TYPE,
-- 	ET.AMOUNT_CHIPS AS AMOUNT_CHIPS,ET.AMOUNT AS AMOUNT,ET.CURRENCY_CODE AS CURRENCY_CODE,ET.TRANSACTION_TYPE AS TRANSACTION_TYPE,
-- 	ET.MESSAGE_TIMESTAMP AS TIMESTAMP,ET.EXTERNAL_TRANSACTION_STATUS
-- from EXTERNAL_TRANSACTION ET
-- join strataprod.PLAYER P
-- left join strataprod.LOBBY_USER lu ON P.USER_ID=lu.USER_ID
-- where EXTERNAL_TRANSACTION_STATUS='SUCCESS' AND (P.ACCOUNT_ID = ET.ACCOUNT_ID)
-- #

DROP VIEW IF EXISTS mm_last_played#
CREATE VIEW mm_last_played AS
SELECT PLAYER_ID,MAX(LAST_PLAYED) AS LAST_PLAYED 
FROM LAST_PLAYED GROUP BY PLAYER_ID#

DROP VIEW IF EXISTS mm_last_levels#
-- CREATE VIEW mm_last_levels AS
-- SELECT
--   lu.PROVIDER_NAME AS PARTNER_ID, lu.EXTERNAL_ID AS EXTERNAL_ID,p.USER_ID AS USER_ID,p.LEVEL AS LEVEL,lp.LAST_PLAYED AS LAST_PLAYED
-- FROM
--   mm_last_played lp
--   JOIN strataprod.PLAYER p
--   JOIN strataprod.LOBBY_USER lu
-- WHERE
--   lp.PLAYER_ID=p.PLAYER_ID AND p.USER_ID=lu.USER_ID AND NOT p.LEVEL IS NULL
-- #