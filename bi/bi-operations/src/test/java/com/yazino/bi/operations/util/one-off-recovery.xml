<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="searchSystemEnvironment" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK"/>
        <property name="locations">
            <list>
                <value>classpath*:environment.properties</value>
                <value>file:/etc/senet/environment.properties</value>
                <value>file:/etc/senet/environment.generated.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dwDataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${dbdw.url}"/>
        <property name="user" value="${dbdw.user}"/>
        <property name="overrideDefaultUser" value="${dbdw.user}"/>
        <property name="password" value="${dbdw.password}"/>
        <property name="overrideDefaultPassword" value="${dbdw.password}"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="30"/>
        <!-- Keep Idle connections for 1 minute apparently MySQL is quicker to start up connections -->
        <property name="maxIdleTime" value="600"/>
        <!-- Keep an active connection for a max of 4 hours -->
        <property name="maxConnectionAge" value="1200"/>
        <!-- Test the idle connections every 10 minutes (Yes the idle timeout is 60 but we have a min pool size.)-->
        <property name="idleConnectionTestPeriod" value="60"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
        <property name="checkoutTimeout" value="5000"/>
        <property name="unreturnedConnectionTimeout" value="120"/>
        <property name="debugUnreturnedConnectionStackTraces" value="true"/>
    </bean>

    <bean id="dwJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dwDataSource"/>
    </bean>


    <bean id="dwFacebookDataRecordingDao" class="com.yazino.bi.operations.persistence.DwFacebookDataRecordingDao">
        <constructor-arg ref="dwJdbcTemplate"/>
    </bean>

    <bean id="externalDwFacebookDataRecordingDao"
          class="com.yazino.bi.operations.persistence.ExternalDwFacebookDataRecordingDao">
        <constructor-arg ref="externalDwJdbcTemplate"/>
    </bean>

    <!-- these are production values -->
    <bean id="adApiService" class="com.yazino.bi.operations.persistence.facebook.FacebookAdApiServiceImpl">
        <property name="accessToken"
                  value="${facebook.graph.ad-api.access-token}"/>
        <property name="adAccount" value="${facebook.graph.ad-api.ad-account}"/>
        <property name="timeShift" value="-1"/>
        <property name="clientFactory">
            <bean class="com.yazino.bi.operations.persistence.facebook.FacebookExtendedClientFactoryImpl"/>
        </property>
    </bean>

    <bean class="com.yazino.bi.operations.util.RecoveryService">
        <constructor-arg ref="dwFacebookDataRecordingDao"/>
        <constructor-arg ref="adApiService"/>
    </bean>


</beans>